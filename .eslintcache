[{"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\index.js":"1","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\App.js":"2","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\index.js":"3","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\Home.js":"4","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\reportListReducer.js":"5","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\modalReducer.js":"6","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\entityReducer.js":"7","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\botListReducer.js":"8","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportDisplay.js":"9","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\index.js":"10","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\BotList.js":"11","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\NavBar.js":"12","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBotModal.js":"13","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportIdList.js":"14","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\index.js":"15","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBot.js":"16","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\botListAction.js":"17","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\reportListAction.js":"18","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\modalAction.js":"19","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\entityAction.js":"20","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\global.js":"21","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\EntityDisplay.js":"22"},{"size":538,"mtime":1611290659191,"results":"23","hashOfConfig":"24"},{"size":1030,"mtime":1614570570230,"results":"25","hashOfConfig":"24"},{"size":464,"mtime":1611330656617,"results":"26","hashOfConfig":"24"},{"size":641,"mtime":1612710158358,"results":"27","hashOfConfig":"24"},{"size":492,"mtime":1611512387579,"results":"28","hashOfConfig":"24"},{"size":1074,"mtime":1611329195464,"results":"29","hashOfConfig":"24"},{"size":480,"mtime":1611327840926,"results":"30","hashOfConfig":"24"},{"size":682,"mtime":1611309147611,"results":"31","hashOfConfig":"24"},{"size":2936,"mtime":1614610690172,"results":"32","hashOfConfig":"24"},{"size":112,"mtime":1611290659193,"results":"33","hashOfConfig":"24"},{"size":1019,"mtime":1614598463251,"results":"34","hashOfConfig":"24"},{"size":554,"mtime":1612709693271,"results":"35","hashOfConfig":"24"},{"size":1154,"mtime":1612708968829,"results":"36","hashOfConfig":"24"},{"size":1487,"mtime":1614598987530,"results":"37","hashOfConfig":"24"},{"size":134,"mtime":1611330122768,"results":"38","hashOfConfig":"24"},{"size":2693,"mtime":1614593682981,"results":"39","hashOfConfig":"24"},{"size":1085,"mtime":1614575914637,"results":"40","hashOfConfig":"24"},{"size":655,"mtime":1614601737715,"results":"41","hashOfConfig":"24"},{"size":1099,"mtime":1611328912402,"results":"42","hashOfConfig":"24"},{"size":631,"mtime":1614569931124,"results":"43","hashOfConfig":"24"},{"size":330,"mtime":1614601042158,"results":"44","hashOfConfig":"24"},{"size":2512,"mtime":1614610980976,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"vlm0od",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\index.js",[],["93","94"],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\App.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\index.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\Home.js",["95"],"import React from \"react\";\r\n//import {CreateBotModal} from \".\";\r\nimport BotList from \"./BotList\"\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container fluid=\"md\">\r\n        {/*<Row>*/}\r\n          {/*<CreateBotModal />*/}\r\n          {/*<Link to=\"/createBot\">Create Bot</Link>*/}\r\n        {/*</Row>*/}\r\n        <Row>\r\n          Bot List\r\n          <BotList/>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\reportListReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\modalReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\entityReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\botListReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportDisplay.js",["96","97","98"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport * as action from \"../../store/actions\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport stripquotes from \"stripquotes\";\r\nimport axios from 'axios';\r\nimport * as CONSTANTS from '../../global';\r\n\r\nconst ReportDisplay = () => {\r\n\r\n    const { id } = useParams();\r\n    //const reportredux = useSelector(state => state.report.item);\r\n    const dispatch = useDispatch();\r\n    const [report, setReport] = useState(null);\r\n\r\n    useEffect(() => {\r\n      console.log(\"report id: \" + id);     \r\n      //dispatch(action.getreportByID(id));\r\n      axios.get(CONSTANTS.GLOBAL_URL + \"/report/retrieveById/\" + id)\r\n      .then((response) => {\r\n        console.log(\"response: \" + JSON.stringify(response));\r\n        setReport(response);\r\n      }, (error) => {\r\n        console.log(\"error: \" + JSON.stringify(error));\r\n      });\r\n    }, [dispatch])\r\n\r\n    return (\r\n        report !== null ? (\r\n        <div className=\"Report-Display\" style={{width: '100%' }}>\r\n            <h3>Display Report</h3>\r\n            <br /><br />\r\n            <h6>Tagged Entities:</h6>\r\n            {report.data.taggedEntities.map(entity => (\r\n                <Link className=\"tagged-entities\" to={`/entity/${entity}`}>\r\n                    { entity }\r\n                </Link>\r\n            ))}\r\n            <br /><br /><br />\r\n            <TextField \r\n                type='text'\r\n                label = 'ID'\r\n                variant='outlined' \r\n                inputProps={{ readOnly: true }}\r\n                value={stripquotes(JSON.stringify(report.data.reportDocid))}\r\n            />\r\n            <br /><br />\r\n            <TextField \r\n                type='text'\r\n                label = 'Date'\r\n                variant='outlined' \r\n                style ={{width: '50%'}}\r\n                inputProps={{ readOnly: true }}\r\n                value={stripquotes(JSON.stringify(report.data.reportDate))}\r\n            />\r\n            <br /><br />                       \r\n            <TextField \r\n                type='text'\r\n                label = 'Title'\r\n                variant='outlined' \r\n                style ={{width: '50%'}}\r\n                inputProps={{ readOnly: true }}\r\n                value={stripquotes(JSON.stringify(report.data.reportTitle))}\r\n            />\r\n            <br /><br />\r\n            <TextField \r\n                type='text' \r\n                label = 'Content'  \r\n                variant='outlined'\r\n                multiline\r\n                style ={{width: '50%'}}\r\n                inputProps={{ readOnly: true }}\r\n                value={stripquotes(JSON.stringify(report.data.reportContent)).replace(/\\r?\\n|\\r/g, \" \")}\r\n            />\r\n        </div>\r\n        ) : (\r\n           <div>Loading...</div> \r\n        )\r\n    );\r\n}\r\n \r\nexport default ReportDisplay;","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\index.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\BotList.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\NavBar.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBotModal.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportIdList.js",["99"],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\index.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBot.js",["100"],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\botListAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\reportListAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\modalAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\entityAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\global.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\EntityDisplay.js",["101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":7,"column":9,"nodeType":"109","messageId":"110","endLine":7,"endColumn":13},{"ruleId":"107","severity":1,"message":"111","line":2,"column":23,"nodeType":"109","messageId":"110","endLine":2,"endColumn":34},{"ruleId":"107","severity":1,"message":"112","line":3,"column":13,"nodeType":"109","messageId":"110","endLine":3,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":27,"column":8,"nodeType":"115","endLine":27,"endColumn":18,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"117","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"118","line":27,"column":15,"nodeType":"109","messageId":"110","endLine":27,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":3,"column":23,"nodeType":"109","messageId":"110","endLine":3,"endColumn":34},{"ruleId":"113","severity":1,"message":"119","line":27,"column":10,"nodeType":"115","endLine":27,"endColumn":20,"suggestions":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'action' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["123"],"'useEffect' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [dispatch, id]",{"range":"129","text":"130"},"Update the dependencies array to be: [dispatch, name]",{"range":"131","text":"132"},[1003,1013],"[dispatch, id]",[1062,1072],"[dispatch, name]"]