[{"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\index.js":"1","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\App.js":"2","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\index.js":"3","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\Home.js":"4","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\botListReducer.js":"5","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\modalReducer.js":"6","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\reportListReducer.js":"7","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\BotList.js":"8","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\index.js":"9","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\NavBar.js":"10","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBotModal.js":"11","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\index.js":"12","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\FormCreate.js":"13","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\modalAction.js":"14","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\botListAction.js":"15","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\reportListAction.js":"16","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\DisplayReportModal.js":"17","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportDisplay.js":"18","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\entityReducer.js":"19","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\entityAction.js":"20"},{"size":538,"mtime":1611290659191,"results":"21","hashOfConfig":"22"},{"size":404,"mtime":1611290659201,"results":"23","hashOfConfig":"22"},{"size":464,"mtime":1611330656617,"results":"24","hashOfConfig":"22"},{"size":504,"mtime":1611511979670,"results":"25","hashOfConfig":"22"},{"size":682,"mtime":1611309147611,"results":"26","hashOfConfig":"22"},{"size":1074,"mtime":1611329195464,"results":"27","hashOfConfig":"22"},{"size":492,"mtime":1611512387579,"results":"28","hashOfConfig":"22"},{"size":1272,"mtime":1611510770400,"results":"29","hashOfConfig":"22"},{"size":112,"mtime":1611290659193,"results":"30","hashOfConfig":"22"},{"size":226,"mtime":1611290659195,"results":"31","hashOfConfig":"22"},{"size":1109,"mtime":1611511979670,"results":"32","hashOfConfig":"22"},{"size":134,"mtime":1611330122768,"results":"33","hashOfConfig":"22"},{"size":2576,"mtime":1611303125507,"results":"34","hashOfConfig":"22"},{"size":1099,"mtime":1611328912402,"results":"35","hashOfConfig":"22"},{"size":1248,"mtime":1611503618271,"results":"36","hashOfConfig":"22"},{"size":625,"mtime":1611512270312,"results":"37","hashOfConfig":"22"},{"size":1221,"mtime":1611512632410,"results":"38","hashOfConfig":"22"},{"size":2158,"mtime":1611511979670,"results":"39","hashOfConfig":"22"},{"size":480,"mtime":1611327840926,"results":"40","hashOfConfig":"22"},{"size":610,"mtime":1611327446718,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"vlm0od",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\index.js",[],["87","88"],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\App.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\index.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\Home.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\botListReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\modalReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\reportListReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\BotList.js",["89"],"import React, { useEffect } from \"react\";\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as action from \"../../store/actions\";\r\nimport DisplayReportModal from \"./DisplayReportModal\";\r\n\r\nfunction BotList() {\r\n    const botList = useSelector(state => state.botList.items)\r\n    const bot = useSelector(state => state.botList.botDetails)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(action.getBotList());\r\n        console.log(JSON.stringify(botList));\r\n    }, [dispatch])\r\n\r\n    function retrieveBot(id) {\r\n        dispatch(action.getBotByID(id));\r\n    }\r\n\r\n    /*function retrieveReport(id) {\r\n        dispatch(action.getreportByID(id));\r\n    }*/\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {botList.map(el => (\r\n                    <li><Button onClick={() => retrieveBot(el.id)}>{el.jobName}</Button></li>\r\n                ))}    \r\n            </ul>\r\n            <ul>\r\n                {bot && bot.taggedReports && bot.taggedReports.map(id => (\r\n                    <li><DisplayReportModal prop={id}/></li>\r\n                ))}\r\n                </ul>\r\n           {/*{JSON.stringify(botDetails)}*/}\r\n        </div>    \r\n    );\r\n};\r\n\r\nexport default BotList;","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\index.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\NavBar.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBotModal.js",["90"],"import React from 'react'\r\nimport { Button,Modal } from 'react-bootstrap'\r\nimport FormCreate from './FormCreate'\r\nimport { useDispatch ,useSelector} from \"react-redux\";\r\nimport * as action from \"../../store/actions\";\r\n\r\nfunction CreateBotModal(){\r\n  \r\n  const botList = useSelector(state => state.botList.items)\r\n  const modalState = useSelector(state => state.modals.createBotModalDisplay)\r\n  const dispatch = useDispatch()\r\n\r\n  function handleModalShow(){\r\n      dispatch(action.openDialog());      \r\n  }\r\n\r\n  function handleModalClose(){\r\n      dispatch(action.closeDialog());  \r\n  }\r\n\r\n  return(\r\n            <div>\r\n                <Button variant=\"primary\" onClick={() => handleModalShow()}>Create Bot </Button>\r\n                <Modal show={modalState}  onHide={handleModalClose}>\r\n                    <Modal.Header closeButton onClick={() => handleModalClose()}>\r\n                    <Modal.Title>Create Bot</Modal.Title>\r\n                    </Modal.Header>\r\n                    <FormCreate/>                  \r\n                </Modal>\r\n            </div>\r\n  );\r\n}\r\n\r\nexport default CreateBotModal;","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\index.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\FormCreate.js",["91"],"import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {MuiPickersUtilsProvider,KeyboardDatePicker} from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport axios from 'axios';\r\n\r\nconst FormCreate = () => {\r\n    const { register, handleSubmit } = useForm();\r\n    const [fromDate, setFromDate] = useState(new Date());\r\n    const [toDate, setToDate] = useState(new Date());\r\n    \r\n    const onSubmit = (data) => {\r\n        data['startDate'] = fromDate;\r\n        data['endDate'] = toDate;\r\n        let output = JSON.stringify(data);\r\n        alert(output);\r\n        console.log(output);\r\n\r\n        const res = axios.put('https://cs-stolen-canal-angela.trycloudflare.com/bot/create', output, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }).then((response) => {\r\n          console.log(\"response: \" + JSON.stringify(response));\r\n        }, (error) => {\r\n          console.log(\"error: \" + JSON.stringify(error));\r\n        });\r\n    }\r\n\r\n    const handleFromDateChange = (date) => {\r\n        console.log(date);\r\n        setFromDate(date);\r\n    };\r\n\r\n    const handleToDateChange = (date) => {\r\n        console.log(date);\r\n        setToDate(date);\r\n    };\r\n     \r\n    return (\r\n      <div className=\"Form-Create\">\r\n        <h2>Create New Bot</h2>\r\n        <br />\r\n        <Form onSubmit={handleSubmit(onSubmit)}> \r\n            <TextField inputRef={register} name=\"jobName\" placeholder=\"Job Name\" variant=\"outlined\"/>\r\n            <br /><br />\r\n            <TextField inputRef={register} name=\"keyword\" placeholder=\"Keyword\" variant=\"outlined\"/>\r\n            <br /><br />\r\n            <TextField inputRef={register} name=\"entity\" placeholder=\"Entities\" variant=\"outlined\"/>\r\n            <br /><br />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker label=\"From:\" value={fromDate} onChange={handleFromDateChange}/>\r\n            </MuiPickersUtilsProvider>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker label=\"To:\" value={toDate} onChange={handleToDateChange}/>\r\n            </MuiPickersUtilsProvider>\r\n            <br /><br /><br />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"default\">Submit</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default FormCreate;","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\modalAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\botListAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\reportListAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\DisplayReportModal.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportDisplay.js",["92"],"import TextField from '@material-ui/core/TextField';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ReportDisplay = (prop) => {\r\n    \r\n    const report = prop;\r\n    const reportDetails = useSelector(state => state.report.item);\r\n\r\n    return (  \r\n        <div className=\"Report-Display\" style={{width: '100%' }}>\r\n            <h2>Display Report</h2>\r\n            <br />\r\n            <TextField \r\n                type='text'\r\n                label = 'Report ID'\r\n                defaultValue='id' \r\n                variant='filled' \r\n                inputProps={{ readOnly: true }}\r\n                value={report.reportDocId}\r\n            />\r\n            <br /><br />\r\n            <TextField \r\n                type='text'\r\n                label = 'Report Date'\r\n                defaultValue='date' \r\n                variant='filled' \r\n                inputProps={{ readOnly: true }}\r\n                //value={reportDetails.reportDate}\r\n            />\r\n            <br /><br />\r\n            <TextField \r\n                type='text'\r\n                label = 'Entities'\r\n                defaultValue='entities' \r\n                variant='filled'\r\n                fullWidth\r\n                inputProps={{ readOnly: true }}\r\n                //value={reportDetails.taggedEntities}\r\n            />\r\n            <br /><br />\r\n            <TextField \r\n                type='text' \r\n                label = 'Report Title'\r\n                defaultValue='title' \r\n                variant='filled' \r\n                fullWidth\r\n                margin='normal'\r\n                inputProps={{ readOnly: true }}\r\n                //value={reportDetails.reportTitle}\r\n            />\r\n            <br />\r\n            <TextField \r\n                type='text' \r\n                label = 'Report Content' \r\n                defaultValue='content' \r\n                variant='filled'\r\n                multiline\r\n                rows={12}\r\n                fullWidth\r\n                margin='normal'\r\n                inputProps={{ readOnly: true }}\r\n               // value={reportDetails.reportContent}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ReportDisplay;","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\entityReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\entityAction.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":17,"column":8,"nodeType":"99","endLine":17,"endColumn":18,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":9,"column":9,"nodeType":"103","messageId":"104","endLine":9,"endColumn":16},{"ruleId":"101","severity":1,"message":"105","line":23,"column":15,"nodeType":"103","messageId":"104","endLine":23,"endColumn":18},{"ruleId":"101","severity":1,"message":"106","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":21},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'botList'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-unused-vars","'botList' is assigned a value but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [botList, dispatch]",{"range":"112","text":"113"},[632,642],"[botList, dispatch]"]