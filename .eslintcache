[{"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\index.js":"1","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\App.js":"2","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\index.js":"3","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\Home.js":"4","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\reportListReducer.js":"5","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\modalReducer.js":"6","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\entityReducer.js":"7","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\botListReducer.js":"8","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportDisplay.js":"9","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\index.js":"10","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\BotList.js":"11","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\NavBar.js":"12","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBotModal.js":"13","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportIdList.js":"14","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\index.js":"15","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBot.js":"16","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\botListAction.js":"17","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\reportListAction.js":"18","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\modalAction.js":"19","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\entityAction.js":"20"},{"size":538,"mtime":1611290659191,"results":"21","hashOfConfig":"22"},{"size":876,"mtime":1612454545524,"results":"23","hashOfConfig":"22"},{"size":464,"mtime":1611330656617,"results":"24","hashOfConfig":"22"},{"size":641,"mtime":1612710158358,"results":"25","hashOfConfig":"22"},{"size":492,"mtime":1611512387579,"results":"26","hashOfConfig":"22"},{"size":1074,"mtime":1611329195464,"results":"27","hashOfConfig":"22"},{"size":480,"mtime":1611327840926,"results":"28","hashOfConfig":"22"},{"size":682,"mtime":1611309147611,"results":"29","hashOfConfig":"22"},{"size":2321,"mtime":1612454602029,"results":"30","hashOfConfig":"22"},{"size":112,"mtime":1611290659193,"results":"31","hashOfConfig":"22"},{"size":1119,"mtime":1612449700564,"results":"32","hashOfConfig":"22"},{"size":554,"mtime":1612709693271,"results":"33","hashOfConfig":"22"},{"size":1154,"mtime":1612708968829,"results":"34","hashOfConfig":"22"},{"size":1472,"mtime":1612449812451,"results":"35","hashOfConfig":"22"},{"size":134,"mtime":1611330122768,"results":"36","hashOfConfig":"22"},{"size":2574,"mtime":1612709787112,"results":"37","hashOfConfig":"22"},{"size":1244,"mtime":1611587590246,"results":"38","hashOfConfig":"22"},{"size":643,"mtime":1611587590246,"results":"39","hashOfConfig":"22"},{"size":1099,"mtime":1611328912402,"results":"40","hashOfConfig":"22"},{"size":619,"mtime":1611587590246,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"vlm0od",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\index.js",[],["85","86"],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\App.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\index.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\Home.js",["87"],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\reportListReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\modalReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\entityReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\reducers\\botListReducer.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportDisplay.js",["88","89","90"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport * as action from \"../../store/actions\";\r\nimport { useParams } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport stripquotes from 'stripquotes';\r\n\r\nconst ReportDisplay = () => {\r\n\r\n    const { id } = useParams();\r\n    const report = useSelector(state => state.report.item);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      console.log(\"report id: \" + id);\r\n      dispatch(action.getreportByID(id));\r\n    }, [dispatch])\r\n\r\n    return (  \r\n        <div className=\"Report-Display\" style={{width: '100%' }}>\r\n            <h3>Display Report</h3>\r\n            <br />\r\n            <TextField \r\n                type='text'\r\n                label = 'ID'\r\n                variant='outlined' \r\n                inputProps={{ readOnly: true }}\r\n                //value={stripquotes(JSON.stringify(report.reportDocid))}\r\n            />\r\n            <br /><br />\r\n            <TextField \r\n                type='text'\r\n                label = 'Date'\r\n                variant='outlined' \r\n                inputProps={{ readOnly: true }}\r\n                //value={stripquotes(JSON.stringify(report.reportDate))}\r\n            />\r\n            <br /><br />\r\n            <TextField\r\n                type='text'\r\n                label = 'Entities'\r\n                variant='outlined'\r\n                inputProps={{ readOnly: true }}\r\n                //value={stripquotes(JSON.stringify(report.taggedEntities))}\r\n            />\r\n            <br /><br />\r\n            <TextField \r\n                type='text'\r\n                label = 'Title'\r\n                variant='outlined' \r\n                style ={{width: '50%'}}\r\n                inputProps={{ readOnly: true }}\r\n                //value={stripquotes(JSON.stringify(report.reportTitle))}\r\n            />\r\n            <br /><br />\r\n            <TextField \r\n                type='text' \r\n                label = 'Content'  \r\n                variant='outlined'\r\n                multiline\r\n                style ={{width: '50%'}}\r\n                inputProps={{ readOnly: true }}\r\n                //value={stripquotes(JSON.stringify(report.reportContent))}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ReportDisplay;","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\index.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\BotList.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\NavBar.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBotModal.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\ReportIdList.js",["91"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import { Button, Modal } from 'react-bootstrap';\r\n//import { useDispatch, useSelector} from \"react-redux\";\r\n//import * as action from \"../../store/actions\";\r\n\r\nfunction ReportIdList(props) {\r\n\r\n    //const reportId = id.prop;\r\n    //const modalState = useSelector(state => state.modals.displayReportModal);\r\n    //const report = useSelector(state => state.report.item);\r\n    //const dispatch = useDispatch();\r\n\r\n    /*useEffect(() => {\r\n      dispatch(action.getreportByID(reportId));\r\n    }, [dispatch])\r\n\r\n    function handleModalShow(id){\r\n      dispatch(action.getreportByID(id));\r\n      dispatch(action.openReportDialog()); \r\n    }\r\n\r\n    function handleModalClose(){\r\n      dispatch(action.closeReportDialog());\r\n    }*/\r\n\r\n    return(\r\n      <div>\r\n        <Link to={`/report/${(props.props)}`}>Report ID:\r\n          {JSON.stringify(props)}\r\n        </Link>\r\n\r\n        {/*JSON.stringify(report)}*/};   \r\n        {/*<Button onClick={() => handleModalShow(reportId)}>{JSON.stringify(reportId)}</Button>*/}\r\n        {/*<Modal style={{width: '100%' }} show={modalState} onHide={handleModalClose}>\r\n          <Modal.Header closeButton onClick={() => handleModalClose()}>\r\n          <Modal.Title>Display Report</Modal.Title>\r\n          </Modal.Header>\r\n          </Modal>*/}\r\n        {/*<ReportDisplay report={report}/> */} \r\n      </div>\r\n    )\r\n}\r\n    \r\nexport default ReportIdList;","C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\index.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\components\\KMList\\CreateBot.js",["92"],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\botListAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\reportListAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\modalAction.js",[],"C:\\Git\\innohack-2021\\KnowledgeBot\\src\\store\\actions\\entityAction.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":7,"column":9,"nodeType":"99","messageId":"100","endLine":7,"endColumn":13},{"ruleId":"97","severity":1,"message":"101","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":11,"column":11,"nodeType":"99","messageId":"100","endLine":11,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":17,"column":8,"nodeType":"105","endLine":17,"endColumn":18,"suggestions":"106"},{"ruleId":"97","severity":1,"message":"107","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"108","line":23,"column":15,"nodeType":"99","messageId":"100","endLine":23,"endColumn":18},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'stripquotes' is defined but never used.","'report' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'useEffect' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [dispatch, id]",{"range":"114","text":"115"},[569,579],"[dispatch, id]"]